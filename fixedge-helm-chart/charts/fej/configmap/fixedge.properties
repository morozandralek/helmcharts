###################################################################
#################     FIX SERVICE CONFIGURATION     ###############
###################################################################

# Server ID
# ID of server, if it is not empty, server will be registered in Discovery by this id. Otherwise, it will not be registered.
server.id=ServerA

# Fix server port
server.port=8911

# Mask for Groovy scripts with BL Rules
#server.rule.filemask=**rules.groovy

#####################################################################
################# ADMINISTRATIVE ACCESS CONFIGURATION ###############
#####################################################################
# Comma-separated list of required roles to login to the remote shell. 'roles' can be empty.
# This means no special access rights to connect to the shell is required.
ssh.auth.roles=SSH_ADMIN

# Comma-separated list of required roles to login over JMX. 'roles' can be empty.
# This means no special access rights is required.
jmx.auth.roles=JMX_ADMIN

###################################################################
#################  LDAP AUTHORIZATION CONFIGURATION ###############
###################################################################
# URL of the external LDAP server against which authentication will take place.
#ldap.server=

# Username (DN) of the "manager" user identity which will be used to
# authenticate to a LDAP server and perform search.
#ldap.manager.username=

# The password for the manager DN
#ldap.manager.password=

# The LDAP filter used to search for users. For example "(uid={0})".
# The substituted parameter is the user's login name.
#ldap.user.search.filter=(uid={0})

# Defines the part of the directory tree under which user searches should be performed.
# Defaults to "" (searching from the root).
#ldap.user.search.base=

# Group search filter. Defaults to (uniqueMember={0}). The substituted parameter is the DN of the user.
# The parameter {1} can be used if you want to filter on the login name.
#ldap.group.search.filter=(uniqueMember={0})

# Defines the part of the directory tree under which group searches should be performed.
# Defaults to "" (searching from the root).
#ldap.group.search.base=

# String prefix that will be added to role strings loaded from persistent storage.
# By default the authority names will have the prefix "ROLE_" prepended. If you don't want any prefix, use "none".
#ldap.group.role.prefix=ROLE_

###################################################################
#################     JMX SERVICE CONFIGURATION     ###############
###################################################################
# Enable Jmx
jmx.enable=false

# Jmx port
jmx.port=1099

# URL for the JMXConnectorServer
jmx.url=service:jmx:rmi://localhost/jndi/rmi://localhost:1099/fixedge

###################################################################
#################    SSH SERVICE CONFIGURATION     ###############
###################################################################
# Enable SSH service, if it is false or empty, SSH service will not be available
ssh.enable=false

###################################################################
#################    METRICS SERVICE CONFIGURATION     ############
###################################################################
# Enable measuring endpoint metrics like number of sent/received messages, latencies, etc.
metrics.enable=false

disruptor.buffer.size=1024

###################################################################
#################    REST SERVICE CONFIGURATION     ###############
###################################################################
# Enable REST service, if it is false or empty, REST service will not be available
rest.service.enable=true

# Name of REST service, if it is empty or disabled, REST service will not be available and registered in Service Discovery
#rest.service.name=REST-AdminAPI

# Name of REST port, if it is empty or disabled, REST service will not be available and registered in Service Discovery
rest.service.port=9010

# REST server keystore properties
rest.keystore.path = classpath:/ssl/rest/rest_keystore.jks
rest.keystore.password = rest

# REST server truststore properties
#rest.truststore.path = classpath:/ssl/rest/rest_keystore.jks
#rest.truststore.password = rest

# SSL protocol for REST
#rest.ssl.protocol = TLSv1.3

# True if REST server needs client authentication.
#rest.ssl.auth = false

# True if REST server needs SNI host check.
#rest.sni.check.enabled = false

# List of API tokens for client's authentication.
# To activate Authenticated Admin REST mode the property should be defined
# with comma separated list of cryptographic hash (SHA-256) of the possible tokens values.
#rest.auth.tokens=

###################################################################
################# REPLICATION SERVICE CONFIGURATION ###############
###################################################################
# Cluster nodes list with priorities
# It is used to define next leader in the cluster
cluster.hazelcast.nodes=ServerA , ServerB 

# Local port to listen for replicated data
replication.server.port=9000

# Remote port on backup nodes to send replicated data
replication.remote.port=9999

# Parameter specifies back-up directory for message logs.
# Valid values: existent directory name (relative or absolute path)
replication.directory=/var/data/fixedge-java


###################################################################
#################  DISCOVERY SERVICE CONFIGURATION  ###############
###################################################################
# Discovery service should be enabled if FEj is used with FIXICC H2 or with LBC configuration
service.discovery.enabled=${fixicch2.enable}

# Name of protocol, used for server registration in Service Discovery
# protocol.name=FIX

# Health check interval (Service Discovery)
# service.discovery.healthcheck.interval=10

# Service Discovery attempt period, milliseconds
# service.discovery.attempt.period=10000

# path to FIX logs
#server.logsUrl=<shared path to logs>

# To use original sessionConfigManager and scheduleConfigManager beans set 'false' or comment it
# To use fixxicch2 session and schedule config managers set 'true'
#server.useFixicch2ConfigManager=true

# If you want to use fixicch2 and register Discovery, uncomment this prop. Otherwise, its default value is false.
fixicch2.enable=false

# Fixicch2 REST API to load fix session and schedules configs and to subscribe on session and schedules changes
# fixicch2.url=http://10.68.21.181:8080

# Fixicch2 service name in Service Discovery
# fixicch2.service=FIXICC-H2

# Fixicch2 URL prefix if Service Discovery is used to define IP and port
# fixicch2.url.prefix=http

# Timeout for attempts to connect to Service Discovery, mc
# fixicch2.service.discovery.connection.timeout=60000

# The number reconnect attempts to FIXICC H2, default value is 0 (infinitely)
# fixicch2.reconnect.attempt=0

# Max time to wait Service Discovery Fixicc H2 health status update, min
# fixicch2.service.discovery.status.update.timeout=10

# Pause to reconnect to FIXICC H2 URL in case of errors, mc
# fixicch2.reconnect.pause=2000

# The number of Consul reconnect attempts, default value is 0 (infinitely)
# consul.reconnect.attempt=0

# True if insecure connection through https to FIXICC H2 is enabled.
# fixicch2.insecure.connection.enabled=false

# FIXICC H2 client keystore properties
# fixicch2.keystore.path = classpath:/ssl/fixicch2/keystore.jks
# fixicch2.keystore.password = fixicch2

# The directory to store the configuration for FIXICC H2, default is logs folder
# fixicch2.cache.path = /var/log/fixedge-java/cache

# True if Drools are enabled.
# drools.engine.enabled=true